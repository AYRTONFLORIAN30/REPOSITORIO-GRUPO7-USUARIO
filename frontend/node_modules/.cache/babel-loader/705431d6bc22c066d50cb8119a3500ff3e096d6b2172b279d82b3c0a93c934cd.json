{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayrton\\\\Desktop\\\\USUARIO APLICACION CORRECTO\\\\frontend\\\\src\\\\pages\\\\Calendario.js\";\n// src/pages/Calendario.js\nimport React from 'react';\nimport '../styles/Calendario.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendario() {\n  const crearEvento = async () => {\n    const token = localStorage.getItem('google_token');\n    if (!token) {\n      alert('Primero inicia sesión con Google.');\n      return;\n    }\n    const evento = {\n      summary: \"Reunión de prueba\",\n      description: \"Discusión del proyecto con el equipo\",\n      start: {\n        dateTime: \"2025-04-02T10:00:00-05:00\",\n        timeZone: \"America/Lima\"\n      },\n      end: {\n        dateTime: \"2025-04-02T11:00:00-05:00\",\n        timeZone: \"America/Lima\"\n      }\n    };\n    try {\n      const res = await fetch('http://localhost:5000/event', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token,\n          event: evento\n        })\n      });\n      if (!res.ok) throw new Error('Error al crear evento');\n      const data = await res.json();\n      console.log('Evento creado:', data);\n      alert('✅ Evento creado correctamente en Google Calendar');\n    } catch (err) {\n      console.error(err);\n      alert('❌ Error al crear el evento');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendario\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pantalla de Calendario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aqu\\xED podr\\xE1s ver tus eventos sincronizados con Google Calendar.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: crearEvento,\n      children: \"Crear Evento en Google Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = Calendario;\nexport default Calendario;\nvar _c;\n$RefreshReg$(_c, \"Calendario\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Calendario","crearEvento","token","localStorage","getItem","alert","evento","summary","description","start","dateTime","timeZone","end","res","fetch","method","headers","body","JSON","stringify","event","ok","Error","data","json","console","log","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ayrton/Desktop/USUARIO APLICACION CORRECTO/frontend/src/pages/Calendario.js"],"sourcesContent":["// src/pages/Calendario.js\r\nimport React from 'react';\r\nimport '../styles/Calendario.css';\r\n\r\nfunction Calendario() {\r\n  const crearEvento = async () => {\r\n    const token = localStorage.getItem('google_token');\r\n    if (!token) {\r\n      alert('Primero inicia sesión con Google.');\r\n      return;\r\n    }\r\n\r\n    const evento = {\r\n      summary: \"Reunión de prueba\",\r\n      description: \"Discusión del proyecto con el equipo\",\r\n      start: {\r\n        dateTime: \"2025-04-02T10:00:00-05:00\",\r\n        timeZone: \"America/Lima\",\r\n      },\r\n      end: {\r\n        dateTime: \"2025-04-02T11:00:00-05:00\",\r\n        timeZone: \"America/Lima\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/event', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ token, event: evento }),\r\n      });\r\n\r\n      if (!res.ok) throw new Error('Error al crear evento');\r\n      const data = await res.json();\r\n      console.log('Evento creado:', data);\r\n      alert('✅ Evento creado correctamente en Google Calendar');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('❌ Error al crear el evento');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendario\">\r\n      <h2>Pantalla de Calendario</h2>\r\n      <p>Aquí podrás ver tus eventos sincronizados con Google Calendar.</p>\r\n      <button onClick={crearEvento}>Crear Evento en Google Calendar</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendario;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,UAAUA,CAAA,EAAG;EACpB,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACF;IAEA,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE,mBAAmB;MAC5BC,WAAW,EAAE,sCAAsC;MACnDC,KAAK,EAAE;QACLC,QAAQ,EAAE,2BAA2B;QACrCC,QAAQ,EAAE;MACZ,CAAC;MACDC,GAAG,EAAE;QACHF,QAAQ,EAAE,2BAA2B;QACrCC,QAAQ,EAAE;MACZ;IACF,CAAC;IAED,IAAI;MACF,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACrDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEjB,KAAK;UAAEkB,KAAK,EAAEd;QAAO,CAAC;MAC/C,CAAC,CAAC;MAEF,IAAI,CAACO,GAAG,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MACrD,MAAMC,IAAI,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,IAAI,CAAC;MACnClB,KAAK,CAAC,kDAAkD,CAAC;IAC3D,CAAC,CAAC,OAAOsB,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;MAClBtB,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,oBACEN,OAAA;IAAK8B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB/B,OAAA;MAAA+B,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BnC,OAAA;MAAA+B,QAAA,EAAG;IAA8D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACrEnC,OAAA;MAAQoC,OAAO,EAAElC,WAAY;MAAA6B,QAAA,EAAC;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV;AAACE,EAAA,GA/CQpC,UAAU;AAiDnB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}